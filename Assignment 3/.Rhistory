## Global options
knitr::opts_chunk$set(
cache = TRUE,
prompt = TRUE,
comment = '',
collapse = TRUE,
warning = FALSE,
message = FALSE)
theta <- seq(-3,3, by=0.1)
theta
## Global options
knitr::opts_chunk$set(
cache = TRUE,
prompt = TRUE,
comment = '',
collapse = TRUE,
warning = FALSE,
message = FALSE)
# write the corresponding information function
iif <- function(theta, a, b){
# get the logit
Z <- a*(theta-b)
# get the probability
out <- 1/(1 + exp(-Z))
info <- out*(1-out)*(a^2)
return(info)
}
# set the ability range
theta <- seq(-3,3, by=0.1)
# set the item parameters
a <- c(2, 1.5, 1.5, 1.5, 2)
b <- c(-1, -0.5, 0, 0.5, 1)
# plot the item information function
info_out <- iif(theta, a[1], b[1])
info_out
SE_out <- sqrt(1/info_out)
plot(theta, info_out,type = "l", col="red",
main = "Information and SE for Item 1")
lines(theta, SE_out, type ="o", col="blue")
## Global options
knitr::opts_chunk$set(
cache = TRUE,
prompt = TRUE,
comment = '',
collapse = TRUE,
warning = FALSE,
message = FALSE)
# write the corresponding information function
iif <- function(theta, a, b){
# get the logit
Z <- a*(theta-b)
# get the probability
out <- 1/(1 + exp(-Z))
info <- out*(1-out)*(a^2)
return(info)
}
# set the ability range
theta <- seq(-3,3, by=0.1)
# set the item parameters
a <- c(2, 1.5, 1.5, 1.5, 2)
b <- c(-1, -0.5, 0, 0.5, 1)
# plot the item information function
info_out <- iif(theta, a[1], b[1])
info_out
SE_out <- 1/sqrt(info_out)
SE_out
plot(theta, info_out,type = "l", col="red",
main = "Information and SE for Item 1")
lines(theta, SE_out, type ="o", col="blue")
# write the corresponding information function
iif <- function(theta, a, b){
# get the logit
Z <- a*(theta-b)
# get the probability
out <- 1/(1 + exp(-Z))
info <- out*(1-out)*(a^2)
return(info)
}
# set the ability range
theta <- seq(-3,3, by=0.1)
# set the item parameters
a <- c(2, 1.5, 1.5, 1.5, 2)
b <- c(-1, -0.5, 0, 0.5, 1)
# plot the item information function
info_out <- iif(theta, a[1], b[1])
info_out
SE_out <- 1/sqrt(info_out)
SE_out
plot(theta, info_out,type = "l", col="red",
main = "Information and SE for Item 1")
lines(theta, SE_out, type ="o", col="blue")
irt_2pl <- function(theta, a, b){
# get the logit
Z <- a*(theta-b)
# get the probability
p <- 1/(1 + exp(-Z))
return(p)
}
iif_test <- function(P, a){
info_test <- (a^2)*P*(1-P)
return(info_test)
}
# set the ability range
theta <- seq(-3,3, by=0.1)
# set the item parameters
a <- c(2, 1.5, 1.5, 1.5, 2)
b <- c(-1, -0.5, 0, 0.5, 1)
P <- irt_2pl(theta,a,b)
# set the ability range
theta <- seq(-3,3, by=0.1)
# set the item parameters
a <- c(2, 1.5, 1.5, 1.5, 2)
b <- c(-1, -0.5, 0, 0.5, 1)
P <- irt_2pl(theta,a[1],b[1])
P
iif_out <- iif_test(P, a[1])
iif_out
iif_out <- iif_test(P, a = a[1])
iif_out
iif_out <- iif_test(P, a = a[2])
iif_out
# plot the item information function
info_out <- iif(theta, a[2], b[2])
info_out
SE_out <- 1/sqrt(info_out)
SE_out
plot(theta, info_out,type = "l", col="red",
main = "Information and SE for Item 1")
lines(theta, SE_out, type ="o", col="blue")
plot()
# set the ability range
theta <- seq(-3,3, by=0.5)
# set the item parameters
a <- c(2, 1.5, 1.5, 1.5, 2)
b <- c(-1, -0.5, 0, 0.5, 1)
# define the color
color_set <- c("red", "green", "blue","violet","black")
# create a vector to sum up all the information function
tff <- c()
# plot the item information function
info_out <- iif(theta, a[1], b[1])
plot(theta, info_out,type = "l", col=color_set[1],
main = "Information and SE for Item 1",
xlab = "Ability", ylab = "information",
ylim = c(0,5))
grid()
# update the test information
tff <- tff+info_out
for (i in 2:5) {
info_out_i <- iif(theta,a[i],b[i])
lines(theta, info_out_i, type ="l", col=color_set[i])
tff <- tff+info_out_i
}
# draw the test information function
lines(theta, tff, type = "l", col="gray")
tff
# create a vector to sum up all the information function
test_info <- info_out
info_out
